{"ast":null,"code":"var _jsxFileName = \"/Users/reva/Desktop/projects/ucsc-gwc-webapp/frontend/src/components/PeopleList.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport '../styles/PeopleList.css';\nimport { FaLinkedin } from \"react-icons/fa\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PeopleList = () => {\n  _s();\n  const [people, setPeople] = useState([]);\n  useEffect(() => {\n    const fetchPeople = async () => {\n      try {\n        // Use full URL to fetch data from the backend\n        const response = await fetch('http://localhost:5001/people');\n        if (!response.ok) {\n          throw new Error('Network response was not ok');\n        }\n        const data = await response.json();\n        setPeople(data);\n      } catch (error) {\n        console.error('Error fetching people:', error);\n      }\n    };\n    fetchPeople();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"background\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"ot-title\",\n      children: \"Our Team\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"people-list\",\n      children: people.map((person, index) => {\n        const {\n          firstName,\n          middleName,\n          lastName,\n          role,\n          linkedin\n        } = person; // Destructure the properties\n        const fullName = `${firstName} ${middleName} ${lastName}`.trim(); // Construct full name\n\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"person-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: profilePic,\n            alt: fullName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 15\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"person-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"a\", {\n              href: linkedin,\n              target: \"_blank\",\n              rel: \"noreferrer\",\n              children: /*#__PURE__*/_jsxDEV(FaLinkedin, {\n                className: \"linkedin-icon\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 39,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: fullName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: role\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n_s(PeopleList, \"iLHt2u73MC8pQH7JexuLSo07ahk=\");\n_c = PeopleList;\nexport default PeopleList;\nvar _c;\n$RefreshReg$(_c, \"PeopleList\");","map":{"version":3,"names":["React","useEffect","useState","FaLinkedin","jsxDEV","_jsxDEV","PeopleList","_s","people","setPeople","fetchPeople","response","fetch","ok","Error","data","json","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","person","index","firstName","middleName","lastName","role","linkedin","fullName","trim","src","profilePic","alt","href","target","rel","_c","$RefreshReg$"],"sources":["/Users/reva/Desktop/projects/ucsc-gwc-webapp/frontend/src/components/PeopleList.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport '../styles/PeopleList.css';\nimport { FaLinkedin } from \"react-icons/fa\";\n\nconst PeopleList = () => {\n  const [people, setPeople] = useState([]);\n\n  useEffect(() => {\n    const fetchPeople = async () => {\n      try {\n        // Use full URL to fetch data from the backend\n        const response = await fetch('http://localhost:5001/people');\n        if (!response.ok) {\n          throw new Error('Network response was not ok');\n        }\n        const data = await response.json();\n        setPeople(data);\n      } catch (error) {\n        console.error('Error fetching people:', error);\n      }\n    };\n\n    fetchPeople();\n  }, []);\n\n  return (\n    <div className=\"background\">\n      <h1 className='ot-title'>Our Team</h1>\n      <div className=\"people-list\">\n        {people.map((person, index) => {\n          const { firstName, middleName, lastName, role, linkedin } = person; // Destructure the properties\n          const fullName = `${firstName} ${middleName} ${lastName}`.trim(); // Construct full name\n\n          return (\n            <div key={index} className=\"person-card\">\n              <img src={profilePic} alt={fullName} /> {/* Use the profilePic field directly */}\n              <div className='person-info'>\n                <a href={linkedin} target=\"_blank\" rel=\"noreferrer\">\n                  <FaLinkedin className='linkedin-icon' />\n                </a>\n                <h3>{fullName}</h3>\n                <p>{role}</p>\n              </div>\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n\nexport default PeopleList;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}