{"ast":null,"code":"var _jsxFileName = \"/Users/reva/Desktop/projects/ucsc-gwc-webapp/frontend/src/components/UpcomingEvents.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { initClient, listUpcomingEvents } from './googleApi';\nimport '../styles/UpcomingEvents.css';\nimport Calendar from 'react-calendar';\nimport 'react-calendar/dist/Calendar.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UpcomingEvents = () => {\n  _s();\n  const [events, setEvents] = useState([]);\n  const [date, setDate] = useState(new Date());\n  const calendarEmbed = `<iframe src=\"https://calendar.google.com/calendar/embed?src=lolahere09%40gmail.com&ctz=America%2FLos_Angeles\" width=\"800\" height=\"600\" frameborder=\"0\" scrolling=\"no\"></iframe>`;\n  useEffect(() => {\n    initClient().then(() => {\n      loadEvents();\n    }).catch(error => {\n      console.error(\"Error loading GAPI client for API\", error);\n    });\n  }, []);\n  const loadEvents = () => {\n    listUpcomingEvents().then(response => {\n      const eventItems = response.result.items.map(event => ({\n        id: event.id,\n        summary: event.summary,\n        start: event.start.dateTime || event.start.date\n      }));\n      setEvents(eventItems);\n    }).catch(error => {\n      console.error(\"Error fetching events\", error);\n    });\n  };\n  const handleDateChange = date => {\n    setDate(date);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Google Calendar Events\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: events.map(event => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [event.summary, \" (\", event.start.dateTime || event.start.date, \")\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this), \" Location \\uD83D\\uDCCD: \", event.location, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this), \" Description \\uD83D\\uDC81\\u200D\\u2640\\uFE0F: \", event.description]\n      }, event.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"My Google Calendar Events\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Calendar, {\n      onChange: handleDateChange,\n      value: date\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Events on \", date.toDateString(), \":\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: events.map(event => {\n        const eventDate = new Date(event.start);\n        if (eventDate.toDateString() === date.toDateString()) {\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [event.summary, \" (\", event.start, \")\"]\n          }, event.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 15\n          }, this);\n        }\n        return null;\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      dangerouslySetInnerHTML: {\n        __html: calendarEmbed\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n_s(UpcomingEvents, \"z4RM9Gmpz9KMtKGn7Kxtar74tiE=\");\n_c = UpcomingEvents;\nexport default UpcomingEvents;\n\n// return (\n\n//     // <div className='upcoming-events-container'>\n//     //   <h1 className=\"upcoming-events-header\">Upcoming Events</h1>\n//     //   <div className=\"upcoming-events-content\">\n//     //     <div className=\"left-column\">\n//     //         <div className=\"event-item\">\n//     //             <h2 className=\"event-title\">Weekly Meetings</h2>\n//     //             <div className=\"event-description\">\n//     //             <p className=\"event\">Leetcode Session   ‚ü∂</p>\n//     //             <p className=\"event\">Portfolio Workshop ‚ü∂</p>\n//     //             <p className=\"event\">Portfolio Workshop ‚ü∂</p>\n//     //             </div>\n//     //         </div>\n//     //     </div>\n//     //     <div className=\"right-column\">\n//     //       <div className=\"green-square\"></div>\n//     //     </div>\n//     //   </div>\n//     // </div>\n//   );\n// }\n// }  \nvar _c;\n$RefreshReg$(_c, \"UpcomingEvents\");","map":{"version":3,"names":["React","useEffect","useState","initClient","listUpcomingEvents","Calendar","jsxDEV","_jsxDEV","UpcomingEvents","_s","events","setEvents","date","setDate","Date","calendarEmbed","then","loadEvents","catch","error","console","response","eventItems","result","items","map","event","id","summary","start","dateTime","handleDateChange","children","fileName","_jsxFileName","lineNumber","columnNumber","location","description","onChange","value","toDateString","eventDate","dangerouslySetInnerHTML","__html","_c","$RefreshReg$"],"sources":["/Users/reva/Desktop/projects/ucsc-gwc-webapp/frontend/src/components/UpcomingEvents.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { initClient, listUpcomingEvents } from './googleApi';\nimport '../styles/UpcomingEvents.css';\nimport Calendar from 'react-calendar';\nimport 'react-calendar/dist/Calendar.css';\n\n\nconst UpcomingEvents = () => {\n  const [events, setEvents] = useState([]);\n  const [date, setDate] = useState(new Date());\n  const calendarEmbed = `<iframe src=\"https://calendar.google.com/calendar/embed?src=lolahere09%40gmail.com&ctz=America%2FLos_Angeles\" width=\"800\" height=\"600\" frameborder=\"0\" scrolling=\"no\"></iframe>`;\n\n\n\n  useEffect(() => {\n    initClient().then(() => {\n      loadEvents();\n    }).catch((error) => {\n      console.error(\"Error loading GAPI client for API\", error);\n    });\n  }, []);\n\n  const loadEvents = () => {\n    listUpcomingEvents().then(response => {\n      const eventItems = response.result.items.map(event => ({\n        id: event.id,\n        summary: event.summary,\n        start: event.start.dateTime || event.start.date,\n      }));\n      setEvents(eventItems);\n    }).catch((error) => {\n      console.error(\"Error fetching events\", error);\n    });\n  };\n\n  const handleDateChange = (date) => {\n    setDate(date);\n  };\n\n  return (\n    <div>\n      <h1>Google Calendar Events</h1>\n      <ul>\n        {events.map(event => (\n          <li key={event.id}>\n            {event.summary} ({event.start.dateTime || event.start.date})\n            <br /> Location üìç: {event.location} \n            <br /> Description üíÅ‚Äç‚ôÄÔ∏è: {event.description}\n          </li>\n        ))}\n      </ul>\n\n      <h1>My Google Calendar Events</h1>\n      <Calendar\n        onChange={handleDateChange}\n        value={date}\n      />\n      <h2>Events on {date.toDateString()}:</h2>\n      <ul>\n        {events.map(event => {\n          const eventDate = new Date(event.start);\n          if (eventDate.toDateString() === date.toDateString()) {\n            return (\n              <li key={event.id}>\n                {event.summary} ({event.start})\n              </li>\n            );\n          }\n          return null;\n        })}\n      </ul>\n\n      <div dangerouslySetInnerHTML={{ __html: calendarEmbed }} />\n      \n    </div>\n  );\n};\n\nexport default UpcomingEvents;\n\n// return (\n\n\n  //     // <div className='upcoming-events-container'>\n  //     //   <h1 className=\"upcoming-events-header\">Upcoming Events</h1>\n  //     //   <div className=\"upcoming-events-content\">\n  //     //     <div className=\"left-column\">\n  //     //         <div className=\"event-item\">\n  //     //             <h2 className=\"event-title\">Weekly Meetings</h2>\n  //     //             <div className=\"event-description\">\n  //     //             <p className=\"event\">Leetcode Session   ‚ü∂</p>\n  //     //             <p className=\"event\">Portfolio Workshop ‚ü∂</p>\n  //     //             <p className=\"event\">Portfolio Workshop ‚ü∂</p>\n  //     //             </div>\n  //     //         </div>\n  //     //     </div>\n  //     //     <div className=\"right-column\">\n  //     //       <div className=\"green-square\"></div>\n  //     //     </div>\n  //     //   </div>\n  //     // </div>\n  //   );\n  // }\n// }  "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}