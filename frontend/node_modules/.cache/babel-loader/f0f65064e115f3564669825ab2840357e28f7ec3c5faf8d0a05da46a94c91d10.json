{"ast":null,"code":"import { gapi } from 'gapi-script';\n\n// const API_KEY \nconst CALENDAR_ID = 'lolahere09@gmail.com'; // Replace with your public calendar ID\nconst DISCOVERY_DOCS = [\"https://www.googleapis.com/discovery/v1/apis/calendar/v3/rest\"];\nconst SCOPES = \"https://www.googleapis.com/auth/calendar.events.readonly\";\nconst API_KEY = 'AIzaSyDoFGObW4ZgQVOCK2AQBr4l4TMjJG-St1c'; // Replace with your API key\n\nexport const initClient = () => {\n  return new Promise((resolve, reject) => {\n    gapi.load('client', () => {\n      gapi.client.init({\n        // apiKey: API_KEY, * reva's api key take out\n        discoveryDocs: DISCOVERY_DOCS,\n        scope: SCOPES\n      }).then(() => {\n        resolve(gapi);\n      }, error => {\n        reject(error);\n      });\n    });\n  });\n};\nexport const listUpcomingEvents = () => {\n  return gapi.client.calendar.events.list({\n    calendarId: CALENDAR_ID,\n    timeMin: new Date().toISOString(),\n    showDeleted: false,\n    singleEvents: true,\n    maxResults: 10,\n    orderBy: 'startTime'\n  });\n};","map":{"version":3,"names":["gapi","CALENDAR_ID","DISCOVERY_DOCS","SCOPES","API_KEY","initClient","Promise","resolve","reject","load","client","init","discoveryDocs","scope","then","error","listUpcomingEvents","calendar","events","list","calendarId","timeMin","Date","toISOString","showDeleted","singleEvents","maxResults","orderBy"],"sources":["/Users/reva/Desktop/projects/ucsc-gwc-webapp/frontend/src/components/googleApi.jsx"],"sourcesContent":["import { gapi } from 'gapi-script';\n\n// const API_KEY \nconst CALENDAR_ID = 'lolahere09@gmail.com';  // Replace with your public calendar ID\nconst DISCOVERY_DOCS = [\"https://www.googleapis.com/discovery/v1/apis/calendar/v3/rest\"];\nconst SCOPES = \"https://www.googleapis.com/auth/calendar.events.readonly\";\nconst API_KEY = 'AIzaSyDoFGObW4ZgQVOCK2AQBr4l4TMjJG-St1c';  // Replace with your API key\n\nexport const initClient = () => {\n  return new Promise((resolve, reject) => {\n    gapi.load('client', () => {\n      gapi.client.init({\n        // apiKey: API_KEY, * reva's api key take out\n        discoveryDocs: DISCOVERY_DOCS,\n        scope: SCOPES,\n      }).then(() => {\n        resolve(gapi);\n      }, error => {\n        reject(error);\n      });\n    });\n  });\n};\n\nexport const listUpcomingEvents = () => {\n  return gapi.client.calendar.events.list({\n    calendarId: CALENDAR_ID,\n    timeMin: (new Date()).toISOString(),\n    showDeleted: false,\n    singleEvents: true,\n    maxResults: 10,\n    orderBy: 'startTime',\n  });\n};\n"],"mappings":"AAAA,SAASA,IAAI,QAAQ,aAAa;;AAElC;AACA,MAAMC,WAAW,GAAG,sBAAsB,CAAC,CAAE;AAC7C,MAAMC,cAAc,GAAG,CAAC,+DAA+D,CAAC;AACxF,MAAMC,MAAM,GAAG,0DAA0D;AACzE,MAAMC,OAAO,GAAG,yCAAyC,CAAC,CAAE;;AAE5D,OAAO,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAC9B,OAAO,IAAIC,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAK;IACtCR,IAAI,CAACS,IAAI,CAAC,QAAQ,EAAE,MAAM;MACxBT,IAAI,CAACU,MAAM,CAACC,IAAI,CAAC;QACf;QACAC,aAAa,EAAEV,cAAc;QAC7BW,KAAK,EAAEV;MACT,CAAC,CAAC,CAACW,IAAI,CAAC,MAAM;QACZP,OAAO,CAACP,IAAI,CAAC;MACf,CAAC,EAAEe,KAAK,IAAI;QACVP,MAAM,CAACO,KAAK,CAAC;MACf,CAAC,CAAC;IACJ,CAAC,CAAC;EACJ,CAAC,CAAC;AACJ,CAAC;AAED,OAAO,MAAMC,kBAAkB,GAAGA,CAAA,KAAM;EACtC,OAAOhB,IAAI,CAACU,MAAM,CAACO,QAAQ,CAACC,MAAM,CAACC,IAAI,CAAC;IACtCC,UAAU,EAAEnB,WAAW;IACvBoB,OAAO,EAAG,IAAIC,IAAI,CAAC,CAAC,CAAEC,WAAW,CAAC,CAAC;IACnCC,WAAW,EAAE,KAAK;IAClBC,YAAY,EAAE,IAAI;IAClBC,UAAU,EAAE,EAAE;IACdC,OAAO,EAAE;EACX,CAAC,CAAC;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}