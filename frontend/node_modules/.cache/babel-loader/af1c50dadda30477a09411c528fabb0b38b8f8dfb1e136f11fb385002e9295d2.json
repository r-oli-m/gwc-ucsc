{"ast":null,"code":"var _jsxFileName = \"/Users/reva/Desktop/projects/ucsc-gwc-webapp/frontend/src/components/PeopleList.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport '../styles/PeopleList.css';\nimport { FaLinkedin } from \"react-icons/fa\";\n\n// Import images dynamically\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst importAll = r => {\n  let images = {};\n  r.keys().map((item, index) => {\n    images[item.replace('./', '')] = r(item);\n  });\n  return images;\n};\nconst images = importAll(require.context('../assets/people', false, /\\.(jpeg|jpg|png)$/));\nconst PeopleList = () => {\n  _s();\n  const [people, setPeople] = useState([]);\n  useEffect(() => {\n    const fetchPeople = async () => {\n      try {\n        // Use full URL to fetch data from the backend\n        const response = await fetch('http://localhost:5001/people');\n        if (!response.ok) {\n          throw new Error('Network response was not ok');\n        }\n        const data = await response.json();\n        setPeople(data);\n      } catch (error) {\n        console.error('Error fetching people:', error);\n      }\n    };\n    fetchPeople();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"gradient-background\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"ot-title\",\n      children: \"Our Team\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"people-list\",\n      children: people.map((person, index) => {\n        // Access the fields with bracket notation\n        const firstName = person['First Name'];\n        const middleName = person['Middle Name (leave blank if none)'] || ''; // Fallback for empty middle name\n        const lastName = person['Last Name'];\n        const role = person['Role (Member or specify Officer role)'];\n        const linkedin = person['LinkedIn URL'];\n        const fullName = `${firstName} ${middleName} ${lastName}`.trim(); // Construct full name\n        const imageFileNameJpeg = `${firstName}_${lastName}.jpeg`;\n        const imageFileNameJpg = `${firstName}_${lastName}.jpg`;\n\n        // Check for .jpeg or .jpg version of the image\n        const imageUrl = images[imageFileNameJpeg] || images[imageFileNameJpg] || '/blank_profile_picture.png'; // Use default image if not found\n\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"person-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: imageUrl,\n            alt: fullName,\n            onError: e => {\n              e.target.src = '/blank_profile_picture.png';\n            } // Fallback to blank image on error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"person-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"a\", {\n              href: linkedin,\n              target: \"_blank\",\n              rel: \"noreferrer\",\n              children: /*#__PURE__*/_jsxDEV(FaLinkedin, {\n                className: \"linkedin-icon\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 59,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: fullName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: role\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n_s(PeopleList, \"iLHt2u73MC8pQH7JexuLSo07ahk=\");\n_c = PeopleList;\nexport default PeopleList;\nvar _c;\n$RefreshReg$(_c, \"PeopleList\");","map":{"version":3,"names":["React","useEffect","useState","FaLinkedin","jsxDEV","_jsxDEV","importAll","r","images","keys","map","item","index","replace","require","context","PeopleList","_s","people","setPeople","fetchPeople","response","fetch","ok","Error","data","json","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","person","firstName","middleName","lastName","role","linkedin","fullName","trim","imageFileNameJpeg","imageFileNameJpg","imageUrl","src","alt","onError","e","target","href","rel","_c","$RefreshReg$"],"sources":["/Users/reva/Desktop/projects/ucsc-gwc-webapp/frontend/src/components/PeopleList.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport '../styles/PeopleList.css';\nimport { FaLinkedin } from \"react-icons/fa\";\n\n// Import images dynamically\nconst importAll = (r) => {\n  let images = {};\n  r.keys().map((item, index) => { images[item.replace('./', '')] = r(item); });\n  return images;\n};\nconst images = importAll(require.context('../assets/people', false, /\\.(jpeg|jpg|png)$/));\n\nconst PeopleList = () => {\n  const [people, setPeople] = useState([]);\n\n  useEffect(() => {\n    const fetchPeople = async () => {\n      try {\n        // Use full URL to fetch data from the backend\n        const response = await fetch('http://localhost:5001/people');\n        if (!response.ok) {\n          throw new Error('Network response was not ok');\n        }\n        const data = await response.json();\n        setPeople(data);\n      } catch (error) {\n        console.error('Error fetching people:', error);\n      }\n    };\n\n    fetchPeople();\n  }, []);\n\n  return (\n    <div className='gradient-background'>\n      <h1 className='ot-title'>Our Team</h1>\n      <div className=\"people-list\">\n        {people.map((person, index) => {\n          // Access the fields with bracket notation\n          const firstName = person['First Name'];\n          const middleName = person['Middle Name (leave blank if none)'] || ''; // Fallback for empty middle name\n          const lastName = person['Last Name'];\n          const role = person['Role (Member or specify Officer role)'];\n          const linkedin = person['LinkedIn URL'];\n\n          const fullName = `${firstName} ${middleName} ${lastName}`.trim(); // Construct full name\n          const imageFileNameJpeg = `${firstName}_${lastName}.jpeg`;\n          const imageFileNameJpg = `${firstName}_${lastName}.jpg`;\n\n          // Check for .jpeg or .jpg version of the image\n          const imageUrl = images[imageFileNameJpeg] || images[imageFileNameJpg] || '/blank_profile_picture.png'; // Use default image if not found\n\n          return (\n            <div key={index} className=\"person-card\">\n              <img src={imageUrl} alt={fullName} onError={(e) => { e.target.src = '/blank_profile_picture.png'; }} // Fallback to blank image on error\n              />\n              <div className='person-info'>\n                <a href={linkedin} target=\"_blank\" rel=\"noreferrer\">\n                  <FaLinkedin className='linkedin-icon' />\n                </a>\n                <h3>{fullName}</h3>\n                <p>{role}</p>\n              </div>\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n\nexport default PeopleList;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}